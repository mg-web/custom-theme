#site-header {
    display: flex;
    flex-direction: column;
    align-items: center;
    background: $mg_red;
    padding: 12px 0 0;

    @include xxl {
        display: grid;
        padding: 0;
        background: $white;
        grid-template-rows: 40px auto 50px;
        grid-template-columns: minmax(0, calc((100vw - $content_max_width) / 2)) 1fr minmax(100px, 300px) 1fr minmax(0, calc((100vw - $content_max_width) / 2));
        grid-template-areas: // space-r & space-l are just filler columns.
        'top top top top top'
        'space-l brand ctas ctas space-r'
        'space-l brand space menu menu';
    }

    .site-branding {
        filter: brightness(0) invert(1);

        @include xxl {
            filter: none;
            grid-area: brand;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            justify-content: space-evenly;
            max-width: 300px;
            text-align: center;
            min-height: 150px;
        }
    }

  .tag-line {
    display: none;

    @include xxl {
        margin-bottom: 0;
    }
  }
}

#top-nav,
#header-ctas,
#primary-nav {
    display: none;
    position: relative;

    @include xxl {
        display: flex;
        justify-content: flex-end;
        align-items: center;
    }

    a,
    span {
        margin-left: 15px;
    }
}

#top-nav,
#primary-nav {
  & a,
  & span,
  & div.dropdown {
    display: flex;
    height: 100%;
    align-items: center;
    text-decoration: none;
    color: $white;
    position: relative;
    
    &:hover {
      .submenu {
        display: flex;
      }
    }
  }
  
  .submenu {
    display: none;
    background: $black;
    position: absolute;
    right: 0;
    top: 100%;
    z-index: 1;
    text-align: right;
    flex-direction: column;
  
    a,
    span,
    div.dropdown {
      display: block;
    }
  }
}

#top-nav {
    grid-area: top;
    background: $primary;
    padding: 0 calc((100vw - $content_max_width) / 2);
    height: 40px;
}

#header-ctas {
    grid-area: ctas;
}

#primary-nav {
    grid-area: menu;
    background: $secondary;
    padding-right: calc((100vw - $content_max_width) / 2);
    align-self: flex-end;
    height: 50px;

    &::before {
      content: "";
      height: 100%;
      width: 52px;
      background: $secondary;
      position: absolute;
      left: -52px;
      clip-path: polygon(50px 0, 100% 0%, 100% 100%, 0% 100%);
    }
}












/* Mobile Menu */

$items: 4;
$transition-duration: 0.5s;
$transition-delay: 0.05s;


/* Basic styles */

#mob-menu {
  position: relative;
  background-color: #8e8e8e;
  overflow: hidden;
  width: 100%;

  @include xxl {
      display: none;
  }
}


/* Toggle functionality */

// To hide the checkbox
#toggle {
  position: absolute;
  left: -100%;
  top: -100%;
}

#toggle:focus {

  & ~ .toggle-container .button-toggle {
    box-shadow: 0 0 0 8px rgba(0, 0, 0, 0.1), inset 0 0 0 20px rgba(0, 0, 0, 0.1);
  }
}

// Styles for the 'open' state, if the checkbox is checked
#toggle:checked {
  // Any element you need to change the style if menu is open goes here, using the sibling selector (~) as follows

  // Making the "X" icon using `:before` and `:after` pseudo-elements
  & ~ .toggle-container .button-toggle {
    box-shadow: 0 0 0 550px rgba(0, 0, 0, 0.1), inset 0 0 0 20px rgba(0, 0, 0, 0.1);

    &:hover {
      box-shadow: 0 0 0 550px rgba(0, 0, 0, 0.1), inset 0 0 0 20px rgba(0, 0, 0, 0.1), 0 0 0 8px rgba(0, 0, 0, 0.1), inset 0 0 0 20px rgba(0, 0, 0, 0.1);
    }

    &:before {
      transform: translateY(-50%) rotate(45deg) scale(1);
    }

    &:after {
      transform: translateY(-50%) rotate(-45deg) scale(1);
    }
  }

  &:focus ~ .toggle-container .button-toggle {
    box-shadow: 0 0 0 550px rgba(0, 0, 0, 0.1), inset 0 0 0 20px rgba(0, 0, 0, 0.1), 0 0 0 8px rgba(0, 0, 0, 0.1), inset 0 0 0 20px rgba(0, 0, 0, 0.1);
  }

  // Open nav
  & ~ .nav {
    margin-bottom: 100px;
    pointer-events: auto;
    margin: 14px 25px 0 60px;

    // Restoring nav items from "lines" in the menu icon
    a {
      color: $white;
      letter-spacing: 0;
      height: 40px;
      line-height: 40px;
      margin-top: 0;
      opacity: 1;
      transform: scaleY(1);
      transition: $transition-duration, opacity 0.1s;

      // Setting delays for the nav items in open transition
      @for $i from 1 through $items {
        &:nth-child(#{$i}) {
          $delay: ($items - $i) * $transition-delay;
          transition-delay: $delay;
          &:before {
            transition-delay: $delay;
          }
        }
      }

      // Hiding the lines
      &:before {
        opacity: 0;
      }
    }
  }
}


/* Toggle button */

.button-toggle {
  position: absolute;
  display: inline-block;
  width: 20px;
  height: 20px;
  margin: 25px;
  background-color: transparent;
  border: none;
  cursor: pointer;
  border-radius: 100%;
  transition: $transition-duration + 0.1;

  // Shadow on hover
  &:hover {
    box-shadow: 0 0 0 8px rgba(0, 0, 0, 0.1), inset 0 0 0 20px rgba(0, 0, 0, 0.1);
  }

  // Making the "X" icon using `:before` and `:after` pseudo-elements
  // Initially hidden because `scale(0)` transformation

  &:before, &:after {
    position: absolute;
    content: '';
    top: 50%;
    left: 0;
    width: 100%;
    height: 2px;
    background-color: $white;
    border-radius: 5px;
    transition: $transition-duration;
  }

  &:before {
    transform: translateY(-50%) rotate(45deg) scale(0);
  }

  &:after {
    transform: translateY(-50%) rotate(-45deg) scale(0);
  }
}


/* Menu */

.nav {
  display: grid;
  margin: 25px 25px 20px;
  // Don't want pointer-events as menu is closed
  pointer-events: none;
  transition: $transition-duration;
}

// Showing nav items as lines, making up the hamburger menu icon
.nav a {
  position: relative;
  display: inline-block;
  float: left;
  clear: both;
  color: transparent;
  font-size: 14px;
  letter-spacing: -6.2px;
  height: 7px;
  line-height: 7px;
  text-transform: uppercase;
  white-space: nowrap;
  transform: scaleY(0.2);
  transition: $transition-duration, opacity 1s;

  // Setting delays for the nav items in close transition
  @for $i from 1 through $items {
    &:nth-child(#{$i}) {
      $delay: ($i - 1) * $transition-delay;
      transition-delay: $delay;
      &:before {
        transition-delay: $delay;
      }
    }
  }

  // Adjusting width for the first line
  &:nth-child(1) {
    letter-spacing: -8px;
  }

  // Adjusting width for the second line
  &:nth-child(2) {
    letter-spacing: -7px;
  }

  // Adjusting from the fourth element onwards
  &:nth-child(n + 4) {
    letter-spacing: -8px;
    margin-top: -7px;
    opacity: 0;
  }

  // Getting the lines for the hamburger menu icon
  &:before {
    position: absolute;
    content: '';
    top: 50%;
    left: 0;
    width: 100%;
    height: 3px;
    width: 20px;
    background-color: $white;
    transform: translateY(-50%) scaleY(5);
    transition: $transition-duration;
  }
}
